#include  'TOTVS.ch'
#include 'tlpp-core.th'

namespace owners 

/*/{Protheus.doc} OwnersController
API para Consultar, Incluir, Alterar e Excluir um Tutor
@type class
@author Aencio Vinicius
@since 26/08/2024
@version 1.0
/*/
Class OwnersController
	Data jResponse as json //retorno da api
	Data oService as object // fazer instancia da service

	Public Method new() as object

	@Get("/api/v2/owners") //coluna get
	Public Method get() as Logical

	@Get("/api/v2/owners/:id")
	Public Method getById() as Logical
	
	@Post("/api/v2/owners")
	Public Method post() as Logical
EndClass

/*/{Protheus.doc} new
Obtem uma nova instância da classe OwnersController
@type method
@author Aencio Vinicius
@since 27/08/2024
@version 1.0
/*/ 
Method new()  as object Class OwnersController
	::oService := OwnersService():New()
	::jResponse := JsonObject():New()
Return Self


/*/{Protheus.doc} get
Retornar todos os tutores
@author Aencio Vinicius
@since 27/08/2024
@version 1.0
/*/
Method get() as Logical Class OwnersController
	Local cFields   as Character
	Local cSort     as Character
	Local cFilter   as Character
	Local nPage     as Numeric
	Local nPageSize as Numeric


	cFields   := utils.GetQueryParam('FIELDS')
	cSort     := utils.GetQueryParam('SORT')
	cFilter   := utils.GetQueryParam('FILTER')
	nPage     := utils.GetQueryParam('page')
	nPageSize := utils.GetQueryParam('pageSize')	

	oRest:setKeyHeaderResponse('Content-Type', 'application/json; charset=utf-8')
	oRest:setResponse(::oService:get(Val(nPage), Val(nPageSize), cFilter, cFields, cSort))

Return .T.

/*/{Protheus.doc} getById

@author Aencio
@type method
@since 27/08/2024
@version 1.0
/*/
Method getById() as Logical Class OwnersController
	Local cId     as Character
	Local cFields as Character

	cFields := utils.GetQueryParam('FIELDS') //retorna informação

	oRest:setKeyHeaderResponse('Content-Type', 'application/json; charset=utf-8') // tipo do response
	cId := oRest:getPathParamsRequest()['id'] // passa o parametro
	oRest:setResponse(::oService:get(1, 10,/* cFilter */, cFields, /* cSort */, cId)) //chama o get do service 
Return .T.

/*/{Protheus.doc} post
(long_description)
@author Aencio Vinicius
@since 28/08/2024
@version 1.0
/*/
Method post() as Logical Class OwnersController
	Local cBody as Character // p bpdy contem as informações que quero incluir no banco
	Local jBody as Json //

	oRest:setKeyHeaderResponse('Content-Type', 'application/json; charset=utf-8')

	cBody := oRest:getBodyRequest() //pega as informações que o client enviou que deve estar no formato json
	jBody := JsonObject():New()

	If JBody:FromJson(cBody) == Nil
		oRest:SetResponse(::oService:post(3, jBody))
	Else
		SetRestFault(400, "Json inválido")
	EndIf
Return .T.
