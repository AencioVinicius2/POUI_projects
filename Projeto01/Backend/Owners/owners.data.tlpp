#include "tlpp-core.th"
#include  'TOTVS.ch'

namespace owners
using namespace utils
/*/{Protheus.doc} OwnersData
(long_description)
@author Aencio Vinicius
@since 26/08/2024
@version 1.0
/*/
Class OwnersData From FWAdapterBaseV2
    public method new() as Object
    public method get()
EndClass
/*/{Protheus.doc} new
(long_description)
@author Aencio Vinicius
@since 26/08/2024
@version 1.0
/*/
Method new(cVerb as Character) as Object Class OwnersData 
    _Super:new(cVerb, .T.) //precisa receber um post ou get como parametro
Return Self

/*/{Protheus.doc} AddMapFields
(long_description)
@type  Static Function
@author Aencio Vinicius
@since 26/08/2024
@version 1.0
/*/
Static Function AddMapFields(oSelf as object) 
    oSelf:AddMapField("id"   , "ZSB_ID"   , .T., .T.,{"ZSB_ID"   , 'C', TamSX3('ZSB_ID')[1]   , 0})
    oSelf:AddMapField("name" , "ZSB_NAME" , .T., .T.,{"ZSB_ID"   , 'C', TamSX3('ZSB_ID')[1]   , 0})
    oSelf:AddMapField("rg"   , "ZSB_RG"   , .T., .T.,{"ZSB_RG"   , 'C', TamSX3('ZSB_RG')[1]   , 0})
    oSelf:AddMapField("cpf"  , "ZSB_CPF"  , .T., .T.,{"ZSB_CPF"  , 'C', TamSX3('ZSB_CPF')[1]  , 0})
    oSelf:AddMapField("email", "ZSB_EMAIL", .T., .T.,{"ZSB_EMAIL", 'C', TamSX3('ZSB_EMAIL')[1], 0})
    oSelf:AddMapField("tel1" , "ZSB_TEL1" , .T., .T.,{"ZSB_TEL1" , 'C', TamSX3('ZSB_TEL1')[1] , 0})
    oSelf:AddMapField("tel2" , "ZSB_TEL2" , .T., .T.,{"ZSB_TEL2" , 'C', TamSX3('ZSB_TEL2')[1] , 0})
Return Nil

/*/{Protheus.doc} get
Retorna os dados de tutores
@author user
@since 26/08/2024
@version version
@param param_name, param_type, param_descr
@return return_var, return_type, return_description
/*/
Method get(nPage as Numeric, nPageSize as Numeric, cFilter as Character, cFields as Character, cSort as Character, cOwnerId as Character) Class OwnersData

    Local aArea as Array
    Local cWhere as Character
    Local aFilter as Array
    aFilter := {}

    cWhere := "ZSB_FILIAL = '" + fwXFilial("ZSB") + "' AND D_E_L_E_T_ = ''"

    aArea := fwGetArea()

    AddMapField(self)

    If !Empty(cFilter)
        ::SetUrlFilter(cFilter)
    EndIf

    If !Empty(cFields)
        ::SetFields(cFields)
    EndIf

    If !Empty(cSort)
        ::SetOrderQuery(cSort)
    EndIf

    ::setPage(nPage)
    ::setPageSize(nPageSize)
    ::setQuery(ultils.getQuery("ZSB"))
    ::setWhere(cWhere)
    ::setOrder("ZSB_FILIAL, ZSB_ID")

    If ::Execute()
        ::FilGetResponse()
    EndIf

    RestArea(aArea)
    aSize(aArea, 0)

Return Nil
