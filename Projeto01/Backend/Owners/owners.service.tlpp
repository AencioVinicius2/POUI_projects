#include  'TOTVS.ch'
#include "tlpp-core.th"

namespace owners

/*/{Protheus.doc} OwnersService
(long_description)
@author Aencio Vinicius
@since 26/08/2024
@version version
/*/
Class OwnersService 
    Public Data jResponse as Json
    
    Public Method new() as object
    Public Method get() as Json
    Public Method post() as Json

EndClass

/*/{Protheus.doc} new
(long_description)
@author Aencio Vinicius
@since 26/08/2024
@version 1.0
/*/
Method new() as Object Class OwnersService
    ::jResponse := JsonObject():New() // criando um json vazio que vai retornar os dados para controle
Return Self

/*/{Protheus.doc} get
(long_description)
@author Aencio Vinicius
@since 26/08/2024
@version 1.0
 /*/
Method get(nPage as Numeric, nPageSize as Numeric, cFilter as Character,;
    cFields as Character, cSort as Character, cOwnerId as Character) as Json Class OwnersService
    Local oData as object

    oData := OwnersData():New("GET")
    oData:get(nPage, nPageSize, cFilter, cFields, cSort, cOwnerId)

    If oData:lOk
        ::jResponse := oData:gtJsonObjResponse()
        If !Empty(cOwnerId) .AND. Len(::jResponse['items']) > 0
            ::jResponse := ::jResponse['items'][1]
        EndIf
    Else
        ::jResponse := SetRestFault(oData:GetCode(), 'oData:GetMessage()')
    EndIF
Return :: jResponse

/*/{Protheus.doc} post
(long_description)
@author Aencio Vinicius 
@type Method
@since 28/08/2024
@version 1.0
/*/
Method post(nOperation as Numeric, jBody as Json) as Json Class OwnersService
    Local oData as object

    oData := OwnersData():new("POST")
    ::jResponse := oData:handleOwners(nOperation, jBody) 
    // jResponse -> retorno do que a service vai mandar para a controller
    If !oData:lOk
        ::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
    EndIf
Return ::jResponse
